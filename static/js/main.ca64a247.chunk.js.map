{"version":3,"sources":["components/Person/Person.js","api/Api-configuration.js","actions/getData.js","actions/updateSearch.js","components/Main/Main.js","components/Navbar/Navbar.js","actions/getRecentMatches.js","components/Person/ProfileDetails/ProfileMatches.js","actions/getProfileData.js","components/Person/ProfileDetails/Profile.js","components/ProMatches/ProMatch.js","actions/getProMatches.js","components/ProMatches/ProMatches.js","components/proPlayers/ProPlayer.js","actions/getProPlayers.js","components/proPlayers/ProPlayers.js","App.js","serviceWorker.js","reducers/searchData.js","reducers/getProPlayers.js","reducers/getData.js","reducers/getProfileData.js","reducers/getRecentMatchesData.js","reducers/getProMatches.js","reducers/rootReducer.js","store/store.js","index.js"],"names":["User","react_default","a","createElement","style","className","src","this","props","data","avatarfull","alt","Link","to","pathname","concat","id","state","personaname","Component","Api","url","matchesUrl","proMatchesUrl","proPlayersUrl","profileUrl","getData","name","dispatch","api","axios","get","then","response","type","payload","updateSearch","target","value","Main","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","input","React","createRef","_this2","ref","onChange","onClick","searchData","map","item","index","Person_Person","key","connect","console","log","event","Navbar","href","getRecentMatches","steamId","catch","error","ProfileMatches","match_id","Math","ceil","parseInt","duration","kills","deaths","assists","gold_per_min","xp_per_min","hero_damage","last_hits","getProfileData","Profile","location","account_id","profileData","profile","loccountrycode","mmr_estimate","estimate","solo_competitive_rank","Zoom_default","recentMatches","ProfileDetails_ProfileMatches","ProMatch","radiant_name","dire_name","league_name","radiant_win","getProMatches","ProMatches","proMatches","ProMatches_ProMatch","ProPlayer","team_name","getProPlayers","ProPlayers","proPlayers","proPlayers_ProPlayer","App","BrowserRouter","components_Navbar_Navbar","Switch","Route","exact","path","component","Player","Boolean","window","hostname","match","initialState","arguments","length","undefined","action","objectSpread","rootReducer","combineReducers","store","createStore","reducer","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ca64a247.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport style from './Person.css'\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass User  extends Component {\r\n    render(){\r\n        return (\r\n            <tr style={style} className=\"person\">\r\n                <td>\r\n                    <img src={this.props.data.avatarfull}\r\n                         className=\"person-avatar\"\r\n                         alt=\"User avatar\"/>\r\n                    <Link to={{pathname: `/player/${this.props.id}`,\r\n                        state: {data: this.props.data}}}>{this.props.data.personaname}</Link>\r\n                </td>\r\n            </tr>\r\n        )\r\n    }\r\n}\r\nexport default User;\r\n","const Api =  {\r\n    url: 'https://api.opendota.com/api/search?q=',\r\n    matchesUrl: 'https://api.opendota.com/api/players/',\r\n    proMatchesUrl: 'https://api.opendota.com/api/proMatches',\r\n    proPlayersUrl: 'https://api.opendota.com/api/proPlayers',\r\n    profileUrl: 'https://api.opendota.com/api/players/'\r\n};\r\nexport default Api;\r\n","import axios from 'axios';\r\nimport api from '../api/Api-configuration';\r\n\r\nconst getData = ( name ) => dispatch =>{\r\n    const url = api.url + name;\r\n    axios.get(url).then(response => {\r\n       dispatch ({\r\n           type: 'GET_DATA',\r\n           payload: response.data\r\n       });\r\n   });\r\n};\r\nexport default getData;\r\n","const updateSearch = (props) => dispatch => {\r\n        dispatch ({\r\n            type: 'UPDATE_SEARCH',\r\n            payload: props.target.value\r\n        });\r\n};\r\nexport default updateSearch;\r\n","import React, {Component} from 'react';\r\nimport Person from '../Person/Person';\r\nimport { connect } from 'react-redux';\r\nimport getData from '../../actions/getData';\r\nimport updateSearch from '../../actions/updateSearch';\r\nimport style from './Main.css';\r\n\r\nclass Main extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.input = React.createRef();\r\n    }\r\n    render() {\r\n        return(\r\n            <div style={style} className=\"main-container\">\r\n                <h1>Track your in-game stats in real time!</h1>\r\n                <h4>Input user name and search for stats</h4>\r\n                <div className=\"search-input\">\r\n                    <input type=\"text\" ref={this.input} onChange={this.props.updateSearch}/>\r\n                    <button className=\"waves-effect waves-teal btn-flat\" onClick={() => this.props.getData(this.props.searchData.searchData)}>Search</button>\r\n                </div>\r\n                <div className=\"users-list-container\">\r\n                    <table className=\"users-table table-container\">\r\n                        <thead className=\"table-head\">\r\n                        <tr className=\"row\">\r\n                            <th>Users</th>\r\n                        </tr>\r\n                        </thead>\r\n                            <tbody className=\"table-body\">\r\n                            {this.props.data.data.map((item, index) => {\r\n                                return (\r\n                                    <Person key={index} data={item} id={index}/>\r\n                                )\r\n                            })}\r\n                            </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    console.log(state)\r\n    return {\r\n        searchData: state.searchData,\r\n        data: state.data\r\n    }\r\n};\r\nconst mapDispatchToProps = dispatch => ({\r\n    getData: (name) => dispatch(getData(name)),\r\n    updateSearch: (event) => dispatch(updateSearch(event))\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Main);\r\n","import React from 'react';\r\nimport style from './Navbar.css';\r\n\r\nconst Navbar = () => {\r\n    return(\r\n        <div style={style} className=\"navbar-fixed\">\r\n            <nav className=\"nav-wrapper navbar\">\r\n                <div className=\"container\">\r\n                    <a href=\"/\" className=\"brand-logo center\">[eStats]</a>\r\n                    <ul className=\"left\">\r\n                        <li><a href=\"/\">Main</a></li>\r\n                        <li><a href=\"/matches\">Pro Matches</a></li>\r\n                        <li><a href=\"/players\"> Pro Players</a></li>\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    )\r\n};\r\nexport default Navbar;\r\n","import axios from 'axios';\r\nimport api from '../api/Api-configuration';\r\n\r\nconst getRecentMatches = ( steamId ) => dispatch => {\r\n    const url = api.matchesUrl + steamId + '/recentMatches';\r\n    axios.get(url).then(response => {\r\n        dispatch ({\r\n            type: 'GET_RECENT_MATCHES',\r\n            payload: response.data\r\n        });\r\n    }).catch(error => {\r\n        throw error\r\n    });\r\n};\r\nexport default getRecentMatches;\r\n","import React from 'react';\r\n\r\nconst ProfileMatches = ( props ) => {\r\n    console.log(props)\r\n    return (\r\n        <tr>\r\n            <td>{props.data.match_id}</td>\r\n            <td>{Math.ceil(parseInt(props.data.duration)/60)}min</td>\r\n            <td>{`${props.data.kills} / ${props.data.deaths} / ${props.data.assists}`}</td>\r\n            <td>{`${props.data.gold_per_min} / ${props.data.xp_per_min}`}</td>\r\n            <td>{props.data.hero_damage}</td>\r\n            <td>{props.data.last_hits}</td>\r\n        </tr>\r\n    )\r\n};\r\nexport default ProfileMatches;\r\n","import axios from 'axios';\r\nimport api from '../api/Api-configuration';\r\n\r\nconst getProfileData = (steamId) => dispatch => {\r\n    const url = api.profileUrl + steamId;\r\n    axios.get(url).then(response => {\r\n        dispatch ({\r\n            type: 'GET_PROFILE_DATA',\r\n            payload: response.data\r\n        });\r\n    });\r\n};\r\nexport default getProfileData;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport getRecentMatches from '../../../actions/getRecentMatches';\r\nimport UserMatches from \"./ProfileMatches\";\r\nimport getProfileData from '../../../actions/getProfileData';\r\nimport style from './Player.css'\r\nimport Zoom from 'react-reveal/Zoom';\r\n\r\nclass Profile extends Component {\r\n    componentDidMount() {\r\n        this.props.getProfileData(this.props.location.state.data.account_id);\r\n        this.props.getRecentMatches(this.props.location.state.data.account_id)\r\n    }\r\n   render() {\r\n       const profileData = this.props.profileData.profileData;\r\n       return (\r\n               <div style={style} className=\"user-head\">\r\n                   <img src={profileData.profile.avatarfull} alt='Profile avatar'/>\r\n                   <h3>{profileData.profile.personaname}\r\n                       <span className=\"user-country\">{`[${profileData.profile.loccountrycode !== null ?\r\n                           profileData.profile.loccountrycode : 'X'}]`}</span>\r\n                   </h3>\r\n                   <p>Estimate Rank: {profileData.mmr_estimate.estimate}</p>\r\n                   <p>Solo Competitive Rank: {\r\n                       profileData.solo_competitive_rank !== null ? profileData.solo_competitive_rank : '¯\\\\_(ツ)_/¯'}\r\n                   </p>\r\n                   <div>\r\n                       <h4>Recent matches</h4>\r\n                       <table className=\"profile-table table-container\">\r\n                           <thead className=\"table-head\">\r\n                           <tr>\r\n                               <th>MatchId</th>\r\n                               <th>Duration</th>\r\n                               <th>Kills/Deaths/Assists</th>\r\n                               <th>GPM/XPM</th>\r\n                               <th>Hero damage</th>\r\n                               <th>Last hits</th>\r\n                           </tr>\r\n                           </thead>\r\n                           <Zoom>\r\n                           <tbody className=\"table-body\">\r\n                           {this.props.recentMatches.recentMatches.map((item, index) => {\r\n                               return (\r\n                                   <UserMatches key={index} data={item}/>\r\n                               )\r\n                           })}\r\n                           </tbody>\r\n                           </Zoom>\r\n                       </table>\r\n                   </div>\r\n               </div>\r\n       )\r\n   }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        recentMatches: state.recentMatches,\r\n        profileData: state.profileData\r\n    }\r\n};\r\nconst mapDispatchToProps = dispatch => ({\r\n    getRecentMatches: (steamId) => dispatch(getRecentMatches(steamId)),\r\n    getProfileData: (steamId) => dispatch(getProfileData(steamId))\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile);\r\n","import React from 'react';\r\n\r\nconst ProMatch = ( props ) => {\r\n    return (\r\n            <tr className=\"row100\">\r\n                <td className=\"column100 column1\">{props.data.match_id}</td>\r\n                <td className=\"column100 column2\">{Math.ceil(parseInt(props.data.duration)/60)}min</td>\r\n                <td className=\"column100 column3\">{props.data.radiant_name !== null ? props.data.radiant_name : 'Team Radiant'}</td>\r\n                <td className=\"column100 column4\">{props.data.dire_name !== null ? props.data.dire_name : 'Team Dire'}</td>\r\n                <td className=\"column100 column5\">{props.data.league_name}</td>\r\n                <td className=\"column100 column5\">{props.data.radiant_win === true ? (props.data.radiant_name !== null ? props.data.radiant_name : 'Team Radiant') : (props.data.dire_name !== null ? props.data.dire_name : 'Team Dire')}</td>\r\n            </tr>\r\n    )\r\n};\r\nexport default ProMatch;\r\n","import axios from 'axios';\r\nimport api from '../api/Api-configuration';\r\n\r\nconst getProMatches = () => dispatch => {\r\n    const url = api.proMatchesUrl;\r\n    axios.get(url).then(response => {\r\n        console.log('reposnse:', response)\r\n        dispatch ({\r\n            type: 'GET_PRO_MATCHES',\r\n            payload: response.data\r\n        });\r\n    });\r\n};\r\nexport default getProMatches;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Match from './ProMatch';\r\nimport getProMatches from '../../actions/getProMatches';\r\nimport style from './ProMatches.css';\r\n\r\nclass ProMatches extends Component {\r\n    componentDidMount() {\r\n        this.props.getProMatches()\r\n    }\r\n    render() {\r\n        return(\r\n            <div style={style} className=\"pro-matches-container\">\r\n                <h3>ProMatches</h3>\r\n                <table className=\"table-container\">\r\n                    <thead className=\"table-head\">\r\n                    <tr className=\"row\">\r\n                        <th>MatchId</th>\r\n                        <th>Duration</th>\r\n                        <th>TeamRadiant</th>\r\n                        <th>TeamDire</th>\r\n                        <th>League</th>\r\n                        <th>Winner</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody className=\"table-body\">\r\n                    {this.props.proMatches.proMatches.map((item, index) => {\r\n                        return (\r\n                            <Match key={index} data={item} id={index}/>\r\n                        )\r\n                    })}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        proMatches: state.proMatches\r\n    };\r\n};\r\nconst mapDispatchToProps = dispatch => ({\r\n  getProMatches: () => dispatch(getProMatches())\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProMatches);\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass ProPlayer  extends Component {\r\n    render(){\r\n        return (\r\n            <tr className=\"person\">\r\n                <td>\r\n                    <img src={this.props.data.avatarfull}\r\n                         className=\"person-avatar\"\r\n                         alt=\"User avatar\"/>\r\n                    <Link to={{pathname: `/player/${this.props.id}`,\r\n                        state: {data: this.props.data}}}>{this.props.data.personaname}</Link>\r\n                </td>\r\n                <td>{this.props.data.team_name}</td>\r\n                <td>{this.props.data.name}</td>\r\n            </tr>\r\n        )\r\n    }\r\n}\r\nexport default ProPlayer;\r\n","import axios from 'axios';\r\nimport api from '../api/Api-configuration';\r\n\r\nconst getProPlayers = () => dispatch => {\r\n    const url = api.proPlayersUrl;\r\n    axios.get(url).then(response => {\r\n        console.log('reposnse:', response)\r\n        dispatch ({\r\n            type: 'GET_PRO_PLAYERS',\r\n            payload: response.data\r\n        });\r\n    });\r\n};\r\nexport default getProPlayers;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport ProPlayer from './ProPlayer';\r\nimport getProPlayers from '../../actions/getProPlayers';\r\nimport style from './ProPlayers.css';\r\n\r\nclass ProPlayers extends Component {\r\n    componentDidMount() {\r\n        this.props.getProPlayers()\r\n    }\r\n    render() {\r\n        return(\r\n            <div style={style} className=\"pro-players-container\">\r\n                <h3>ProPlayers</h3>\r\n                <table className=\"pro-players-table-container table-container\">\r\n                    <thead className=\"table-head\">\r\n                    <tr className=\"row\">\r\n                        <th>Player</th>\r\n                        <th>Team</th>\r\n                        <th>Name</th>\r\n                    </tr>\r\n                    </thead>\r\n                        <tbody className=\"table-body\">\r\n                        {this.props.proPlayers.proPlayers.map((item, index) => {\r\n                            return (\r\n                                <ProPlayer key={index} data={item} id={index}/>\r\n                            )\r\n                        })}\r\n                        </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        proPlayers: state.proPlayers\r\n    };\r\n};\r\nconst mapDispatchToProps = dispatch => ({\r\n    getProPlayers: () => dispatch(getProPlayers())\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProPlayers);\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport Main from './components/Main/Main';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Navbar from \"./components/Navbar/Navbar\";\nimport Player from './components/Person/ProfileDetails/Profile'\nimport ProMatches from \"./components/ProMatches/ProMatches\";\nimport ProPlayers from \"./components/proPlayers/ProPlayers\";\n\nclass App extends Component {\n  render() {\n    return (\n        <BrowserRouter>\n            <div className=\"App\">\n                <Navbar/>\n                <Switch>\n                    <Route exact path='/' component={Main}/>\n                    <Route path='/matches' component={ProMatches}/>\n                    <Route path='/players' component={ProPlayers}/>\n                    <Route path='/player/:id' component={Player}/>\n                </Switch>\n            </div>\n        </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initialState = {\r\n    searchData: []\r\n};\r\nconst searchData = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'UPDATE_SEARCH':\r\n            return {\r\n                ...state,\r\n                searchData: action.payload\r\n            };\r\n        default: return state\r\n    }\r\n};\r\nexport default searchData;\r\n","const initialState = {\r\n    proPlayers: []\r\n};\r\nconst getProPlayers = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'GET_PRO_PLAYERS':\r\n            return {\r\n                ...state,\r\n                proPlayers: action.payload,\r\n            };\r\n        default: return state\r\n    }\r\n};\r\nexport default getProPlayers;\r\n","const initialState = {\r\n    data: []\r\n};\r\nconst getData = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'GET_DATA':\r\n            return {\r\n                ...state,\r\n                data: action.payload,\r\n            };\r\n        default: return state\r\n    }\r\n};\r\nexport default getData;\r\n","const initialState = {\r\n    profileData: {\r\n        mmr_estimate:{},\r\n        profile: {}\r\n    }\r\n};\r\nconst getProfileData = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'GET_PROFILE_DATA':\r\n            return {\r\n                ...state,\r\n                profileData: action.payload\r\n            };\r\n        default: return state\r\n    }\r\n};\r\nexport default getProfileData;\r\n","const initialState = {\r\n    recentMatches: []\r\n};\r\nconst getRecentMatches = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'GET_RECENT_MATCHES':\r\n            return {\r\n                ...state,\r\n                recentMatches: action.payload,\r\n            };\r\n        default: return state\r\n    }\r\n};\r\nexport default getRecentMatches;\r\n","const initialState = {\r\n    proMatches: []\r\n};\r\nconst getProMatches = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'GET_PRO_MATCHES':\r\n            return {\r\n                ...state,\r\n                proMatches: action.payload,\r\n            };\r\n        default: return state\r\n    }\r\n};\r\nexport default getProMatches;\r\n","import { combineReducers } from 'redux';\r\nimport searchData from './searchData';\r\nimport proPlayers from './getProPlayers';\r\nimport getData from './getData';\r\nimport profileData from './getProfileData';\r\nimport recentMatches from './getRecentMatchesData';\r\nimport proMatches from './getProMatches';\r\n\r\nconst rootReducer = combineReducers({\r\n    searchData: searchData,\r\n    proPlayers: proPlayers,\r\n    data: getData,\r\n    profileData: profileData,\r\n    recentMatches: recentMatches,\r\n    proMatches: proMatches\r\n});\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport reducer from '../reducers/rootReducer';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\n\r\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(thunk)));\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './store/store'\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}